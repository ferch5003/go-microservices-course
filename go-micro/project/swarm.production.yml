version: '3'

volumes:
  pgdata:
  mongodata:
  rabbitmqdata:
  caddy_data:
    external: true
  caddy_config:

services:
  caddy:
    image: ferch5003/micro-caddy-production:1.0.1
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == node-1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  front-end:
    image: ferch5003/front-end:1.0.2
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "https://broker.<domain>"

  broker-service:
    image: ferch5003/broker-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: ferch5003/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    image: ferch5003/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: ferch5003/logger-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    image: ferch5003/mailer-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_ADDRESS: "info@example.com"
      MAIL_NAME: "info mail microservice"

  rabbitmq:
    image: "rabbitmq:3.13-alpine"
    deploy:
      mode: replicated
      replicas: 1

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "8025:8025"
    deploy:
      mode: replicated
      replicas: 1

  mongo:
    image: "mongo:latest"
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == node-1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodata:/data/db

  postgres:
    image: "postgres:latest"
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == node-1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data/